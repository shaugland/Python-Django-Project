To start the website
    cd /D "<name of the path into the capstone folder that has the manage.py file"
    py manage.py runserver
    go to browser, type localhost:8000/home
        the website doesn't properly have redirect yet
    
    
To interact with website database
    cd /D "<name of path into the capstone folder that has the manage.py file>"
    py manage.py shell
    Not sure the exact things to do, look up to see how to create stuff and other things
    
To add things into the databases on the admin site:
    cd /D "<name of path into the capstone folder that has the manage.py file>"
    py manage.py runserver
    go to browser, type localhost:8000/admin
    click add on the appropriate table to add whatever information in
    
Things needed to be done (not in any order):
    Please check out the Registration database (MSSQL),the user object does most of the things needed automatically ex: password salt and hash is in the database
    Get cancel button on signup page to redirect to home site
    I think signup.js can be deleted since we will be working with server to do things
    Make website automatically redirect to home/
    Make picture appear on the home page. (it sees the link, can't find the picture
    Custom Pricing page:
        Place all the cars and models in the respective database
        Make the dropdowns work in according to the cars in the database
        ( Can probably do a for loop looping over the cars in the database )
        Correctly change main.js to get rid of the cars inside of there
        
    Make page to gather user information (other than signup, there is more fields than the signup page has in the database model
    May need to redo the main.js file to get the dropdowns working, might be able to remove it completely later.
    More styling (if needed, I will not be doing styling, I hate styling)
    Terms and agreements page and redirect to page
        Make sure that the checkmark is checked before creating a user.
    I need to eventually host the python site, should be easy, see redirect home site so we can get it done
    Eventually get the customer feedback working
        Going to need to have a new table for feedback
        Place all the previous feedback down. Have a section to place users own feedback within the site if the feedback is checked? Maybe make it into a button
        
        
        
You can look up things on how to get some of the things needed to be done, I'll try to do the backend stuff. I'm not touching styling or creating the basis of more pages. I'll do mainly python and integrating it in with the previous pages.
    
        
